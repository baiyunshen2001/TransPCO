}
plot(abs((estValue-builtinValue)/builtinValue), xlab = "x", ylab = "absolute error ratio", xaxt = "n")
points(abs((estValueRegroup-builtinValue)/builtinValue), col = 6, pch=17)
axis(1, 1:length(testSeq), testSeq)
legend("topleft", paste("method", c("(a)", "(d)")), col=c(1,6), pch = c(1,17))
abs((estValue-builtinValue)/builtinValue)
abs((estValueRegroup-builtinValue)/builtinValue)
exp(1:25)
exp(-1:25)
exp(-(1:25))
testSeq = 1:25
testSeq = c(testSeq, -testSeq)
estValueRegroup = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValueRegroup[k] = estimateExpRegroup(testSeq[k])
}
estValue = rep(NA, length(testSeq))
builtinValue = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValue[k] = estimateExp(testSeq[k])
builtinValue[k] = exp(testSeq[k])
}
plot(abs((estValue-builtinValue)/builtinValue), xlab = "x", ylab = "absolute error ratio", xaxt = "n")
points(abs((estValueRegroup-builtinValue)/builtinValue), col = 6, pch=17)
axis(1, 1:length(testSeq), testSeq)
legend("topleft", paste("method", c("(a)", "(d)")), col=c(1,6), pch = c(1,17))
testSeq = 1:20
testSeq = c(testSeq, -testSeq)
estValueRegroup = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValueRegroup[k] = estimateExpRegroup(testSeq[k])
}
estValue = rep(NA, length(testSeq))
builtinValue = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValue[k] = estimateExp(testSeq[k])
builtinValue[k] = exp(testSeq[k])
}
plot(abs((estValue-builtinValue)/builtinValue), xlab = "x", ylab = "absolute error ratio", xaxt = "n")
points(abs((estValueRegroup-builtinValue)/builtinValue), col = 6, pch=17)
axis(1, 1:length(testSeq), testSeq)
legend("topleft", paste("method", c("(a)", "(d)")), col=c(1,6), pch = c(1,17))
abs((estValue-builtinValue)/builtinValue)
testSeq = seq(18:22, by=0.5)
testSeq = seq(18, 22, by=0.5)
testSeq = c(testSeq, -testSeq)
estValueRegroup = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValueRegroup[k] = estimateExpRegroup(testSeq[k])
}
estValue = rep(NA, length(testSeq))
builtinValue = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValue[k] = estimateExp(testSeq[k])
builtinValue[k] = exp(testSeq[k])
}
plot(abs((estValue-builtinValue)/builtinValue), xlab = "x", ylab = "absolute error ratio", xaxt = "n")
points(abs((estValueRegroup-builtinValue)/builtinValue), col = 6, pch=17)
axis(1, 1:length(testSeq), testSeq)
legend("topleft", paste("method", c("(a)", "(d)")), col=c(1,6), pch = c(1,17))
testSeq = seq(18, 22, by=0.2)
testSeq = c(testSeq, -testSeq)
estValueRegroup = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValueRegroup[k] = estimateExpRegroup(testSeq[k])
}
estValue = rep(NA, length(testSeq))
builtinValue = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValue[k] = estimateExp(testSeq[k])
builtinValue[k] = exp(testSeq[k])
}
plot(abs((estValue-builtinValue)/builtinValue), xlab = "x", ylab = "absolute error ratio", xaxt = "n")
points(abs((estValueRegroup-builtinValue)/builtinValue), col = 6, pch=17)
axis(1, 1:length(testSeq), testSeq)
legend("topleft", paste("method", c("(a)", "(d)")), col=c(1,6), pch = c(1,17))
abs((estValue-builtinValue)/builtinValue)
abs((estValueRegroup-builtinValue)/builtinValue)
testSeq = 18:22
testSeq = c(testSeq, -testSeq)
estValueRegroup = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValueRegroup[k] = estimateExpRegroup(testSeq[k])
}
estValue = rep(NA, length(testSeq))
builtinValue = rep(NA, length(testSeq))
for(k in 1:length(testSeq)){
estValue[k] = estimateExp(testSeq[k])
builtinValue[k] = exp(testSeq[k])
}
plot(abs((estValue-builtinValue)/builtinValue), xlab = "x", ylab = "absolute error ratio", xaxt = "n")
points(abs((estValueRegroup-builtinValue)/builtinValue), col = 6, pch=17)
axis(1, 1:length(testSeq), testSeq)
legend("topleft", paste("method", c("(a)", "(d)")), col=c(1,6), pch = c(1,17))
install.packages("igraph")
library(igraph)
demo(package="igraph")
g <- make_de_bruijn_graph(2,1)
g
dfs
tinytex::reinstall_tinytex()
getwd()
library(bmass)
detach(bmass)
getwd()
0.05/20
0.05/18
a = readRDS("zscore_mat_10.rds")
dim(a)
dim(a)
hist(a)
dim(b)
b = readRDS("pvalue_pco_10.rds")
dim(b)
str(b)
hist(b)
b = readRDS("pvalue_pco_15.rds")
str(b)
hist(b)
a = readRDS("zscore_mat_15.rds")
dim(a)
a = readRDS("pvalue_pco_6.rds")
dim(a)
str(a)
hist(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
hist(b)
str(a)
par(mfrow=c(1, 2))
hist(a)
hist(b)
str(a)
str(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
getwd()
x = runif(1000)
y = runif(1000)
cov(x, y)
x = runif(100000)
y = runif(100000)
cov(x, y)
x = runif(100000)
y = runif(100000)
cov(log(abs(x), log(abs(y))
x = runif(100000)
y = runif(100000)
cov(log(abs(x), log(abs(y)))
x = runif(100000)
y = runif(100000)
cov(log(abs(x)), log(abs(y)))
cov(x, y)
load("~/Documents/Dahl Lab/changeN.RData")
boxplot(gomPw_1)
boxplot(kmsPw_1)
library(MASS)
install.packages("mvtnorm")
zz <- file("all.Rout", open = "wt")
sink(zz)
sink(zz, type = "message")
try(log("a"))
## revert output back to the console -- only then access the file!
sink(type = "message")
sink()
file.show("all.Rout")
zz <- file("all.Rout", open = "wt")
sink(zz)
sink(zz, type = "message")
try(log("a"))
try(log("a"))
try(log("a"))
sink()
try(log("a"))
sink(type = "message")
try(log("a"))
sink()
file.show("all.Rout")
file.show("all.Rout")
getwd()
unlink("all.Rout")
q()
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b")
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=2)
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=3)
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+0.1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
text("topleft", "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
legend("topleft", "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
legend(1, 30, "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
text(1, 30, "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(2, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0), rep(0, 8)+3)
b = cbind(rep(0, 8), rep(0, 8), c(0, 3, 10, 30, 20, 5, 3, 0))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1),
c(0, 3, 10, 30, 20, 5, 3, 0)-1)
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1),
c(0, 3, 10, 30, 20, 5, 3, 0)-3)
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
q()
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1),
c(0, 3, 10, 30, 20, 5, 3, 0)-3)
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
dir_input = "/project2/xuanyao/data/DGN/txt_file_of_DGN/"
paste0(dir_input, "genotype.matrix.eqtl.txt")
setwd("~/Documents/R/Trans/script")
q()
