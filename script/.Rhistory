dim(a)
hist(a)
dim(b)
b = readRDS("pvalue_pco_10.rds")
dim(b)
str(b)
hist(b)
b = readRDS("pvalue_pco_15.rds")
str(b)
hist(b)
a = readRDS("zscore_mat_15.rds")
dim(a)
a = readRDS("pvalue_pco_6.rds")
dim(a)
str(a)
hist(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
hist(b)
str(a)
par(mfrow=c(1, 2))
hist(a)
hist(b)
str(a)
str(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
a = readRDS("pvalue_pco_6.rds")
str(a)
b = readRDS("pvalue_pco_15.rds")
str(b)
par(mfrow=c(1, 2))
hist(a)
hist(b)
getwd()
x = runif(1000)
y = runif(1000)
cov(x, y)
x = runif(100000)
y = runif(100000)
cov(x, y)
x = runif(100000)
y = runif(100000)
cov(log(abs(x), log(abs(y))
x = runif(100000)
y = runif(100000)
cov(log(abs(x), log(abs(y)))
x = runif(100000)
y = runif(100000)
cov(log(abs(x)), log(abs(y)))
cov(x, y)
load("~/Documents/Dahl Lab/changeN.RData")
boxplot(gomPw_1)
boxplot(kmsPw_1)
library(MASS)
install.packages("mvtnorm")
zz <- file("all.Rout", open = "wt")
sink(zz)
sink(zz, type = "message")
try(log("a"))
## revert output back to the console -- only then access the file!
sink(type = "message")
sink()
file.show("all.Rout")
zz <- file("all.Rout", open = "wt")
sink(zz)
sink(zz, type = "message")
try(log("a"))
try(log("a"))
try(log("a"))
sink()
try(log("a"))
sink(type = "message")
try(log("a"))
sink()
file.show("all.Rout")
file.show("all.Rout")
getwd()
unlink("all.Rout")
q()
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b")
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=2)
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=3)
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b")
}
a = cbind(rep(0, 8))
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+0.1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(0,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2, type = "b", pch=16)
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1)
b = cbind(rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
a = cbind(rep(0, 8)+1, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
text("topleft", "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
legend("topleft", "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
legend(1, 30, "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)",
main = paste0("H", i-1))
text(1, 30, "a")
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(2, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8), rep(0, 8))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3, c(0, 3, 10, 30, 20, 5, 3, 0), rep(0, 8)+3)
b = cbind(rep(0, 8), rep(0, 8), c(0, 3, 10, 30, 20, 5, 3, 0))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1))
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1),
c(0, 3, 10, 30, 20, 5, 3, 0)-1)
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1),
c(0, 3, 10, 30, 20, 5, 3, 0)-3)
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
q()
a = cbind(rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
rep(0, 8)+3,
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 3, 10, 30, 20, 5, 3, 0))
b = cbind(rep(0, 8),
rep(0, 8),
c(0, 3, 10, 30, 20, 5, 3, 0),
c(0, 1, 1, 2, 1, 5, 20, 1),
c(0, 3, 10, 30, 20, 5, 3, 0)-3)
par(mfrow = c(ncol(a), 1))
for(i in 1:ncol(a)){
plot(a[, i], xlim = c(1,8), ylim = c(0, 35), col = 2,
type = "b", pch=16,
xlab = "genomic postion", ylab = "-log10(p)")
text(1.5, 30, paste0("H", i-1))
points(b[, i], col = 4, type = "b", pch=16)
}
dir_input = "/project2/xuanyao/data/DGN/txt_file_of_DGN/"
paste0(dir_input, "genotype.matrix.eqtl.txt")
setwd("~/Documents/R/Trans/script")
data.type="null"
data.type %in% c("obs", "null")
data.type="obs"
data.type %in% c("obs", "null")
!data.type %in% c("obs", "null")
input2 = list("a", "b", "c")
input2
for(p.null.perm in input2){
print(p.null.perm)
}
input2 = "a"
for(p.null.perm in input2){
print(p.null.perm)
}
?rowSums
a=1:10; b=1:10
rowSums(cbind(a, b))
cbind(a, b)
names(a)=letters[1:10]; names(b)=letters[1:10])
names(a)=letters[1:10]; names(b)=letters[1:10]
a
b
cbind(a, b)
rowSums(cbind(a, b))
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3))
saveRDS(res, "a.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)+10)
saveRDS(res, "b.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)-20)
saveRDS(res, "c.rds")
input1 = list("a.rds", "b.rds", "c.rds")
p.obs = rbindlist(lapply(input1, function(x) readRDS(x) ))
p.obs = lapply(input1, function(x) readRDS(x) )
str(p.obs)
p.obs
library(dplyr)
bind_rows(p.obs)
bind_rows(p.obs) %>% group_by(snp)
bind_rows(p.obs) %>% group_by(snp) %>% summarise(snp)
bind_rows(p.obs) %>% group_by(snp) %>% summarise(p)
bind_rows(p.obs) %>% group_by(snp) %>% summarise(mean(p))
bind_rows(p.obs) %>% group_by(snp) %>% summarise(mean(p), mean(q))
?group_by
bind_rows(p.obs) %>% group_by(snp, p) %>% summarise(mean(p), mean(q))
bind_rows(p.obs) %>% group_by(snp, p) %>% summarise(mean(q))
bind_rows(p.obs) %>% group_by(snp, p) %>% summarise("q" = mean(q))
bind_rows(p.obs)
res = bind_rows(p.obs) %>% group_by(snp, p) %>% summarise("q" = mean(q))
res
res %>% filter(q < -3.1)
fdr.level=-3.1
res = bind_rows(p.obs) %>% group_by(snp, p) %>% summarise("q" = mean(q)) %>% filter(q < fdr.level)
res
input1 = list("a.rds", "b.rds", "c.rds"); output2 = "test.txt"
write.table(res, output2,
sep = "\t", row.names=FALSE, col.names=FALSE, quote=FALSE)
x='p/p.null.module{module}.chr{chr}.perm{perm}.rds'
strsplit(x, '.', fixed = T)[[1]][3]
strsplit(x, '.', fixed = T)[[1]][2]
input2
input2 = paste0(letters[1:3], ".rds")
rbindlist(lapply(input2, function(x)
{tmp_y=readRDS(x);
as.data.table(setNames(tmp_y, paste0("n", strsplit(x, '.', fixed = T)[[1]][2], ":", names(tmp_y))), keep.rownames=T)}))
require(data.table)
rbindlist(lapply(input2, function(x)
{tmp_y=readRDS(x);
as.data.table(setNames(tmp_y, paste0("n", strsplit(x, '.', fixed = T)[[1]][2], ":", names(tmp_y))), keep.rownames=T)}))
data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3))
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3))
rownames(res) = res[, 1]; res = res[, 2]
saveRDS(res, "a.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)+10)
rownames(res) = res[, 1]; res = res[, 2]
saveRDS(res, "b.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)-20)
rownames(res) = res[, 1]; res = res[, 2]
saveRDS(res, "c.rds")
res
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3))
res = res[, 2]; rownames(res) = letters[1:3]
saveRDS(res, "a.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)+10)
res = res[, 2]; rownames(res) = letters[1:3]
saveRDS(res, "b.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)-20)
res = res[, 2]; rownames(res) = letters[1:3]
saveRDS(res, "c.rds")
res
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3))
res = res[, 2]; names(res) = letters[1:3]
saveRDS(res, "a.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)+10)
res = res[, 2]; names(res) = letters[1:3]
saveRDS(res, "b.rds")
res = data.frame("snp" = letters[1:3], "p" = 1:3, "q" = c(0.1, 0.2, 0.3)-20)
res = res[, 2]; names(res) = letters[1:3]
saveRDS(res, "c.rds")
res
input2 = paste0(letters[1:3], ".rds")
rbindlist(lapply(input2, function(x)
{tmp_y=readRDS(x);
rbindlist(lapply(input2, function(x)
{tmp_y=readRDS(x);
as.data.table(setNames(tmp_y, paste0("n", strsplit(x, '.', fixed = T)[[1]][2], ":", names(tmp_y))), keep.rownames=T)}))
input2 = paste0(letters[1:3], ".rds")
rbindlist(lapply(input2, function(x)
{tmp_y=readRDS(x);
as.data.table(setNames(tmp_y, paste0("n", strsplit(x, '.', fixed = T)[[1]][2], ":", names(tmp_y))), keep.rownames=T)}))
q()
